//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Industrial
{
    [Serializable]
    public class TriStateMsg : Message
    {
        public const string k_RosMessageName = "industrial_msgs/TriState";
        public override string RosMessageName => k_RosMessageName;

        //  The tri-state captures boolean values with the additional state of unknown
        public sbyte val;
        //  enumerated values
        //  Unknown or unavailable 
        public const sbyte UNKNOWN = -1;
        //  High state                       
        public const sbyte TRUE = 1;
        public const sbyte ON = 1;
        public const sbyte ENABLED = 1;
        public const sbyte HIGH = 1;
        public const sbyte CLOSED = 1;
        //  Low state
        public const sbyte FALSE = 0;
        public const sbyte OFF = 0;
        public const sbyte DISABLED = 0;
        public const sbyte LOW = 0;
        public const sbyte OPEN = 0;

        public TriStateMsg()
        {
            this.val = 0;
        }

        public TriStateMsg(sbyte val)
        {
            this.val = val;
        }

        public static TriStateMsg Deserialize(MessageDeserializer deserializer) => new TriStateMsg(deserializer);

        private TriStateMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.val);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.val);
        }

        public override string ToString()
        {
            return "TriStateMsg: " +
            "\nval: " + val.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
