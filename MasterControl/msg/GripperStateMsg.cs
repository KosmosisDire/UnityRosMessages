//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.MasterControl
{
    [Serializable]
    public class GripperStateMsg : Message
    {
        public const string k_RosMessageName = "master_control/GripperState";
        public override string RosMessageName => k_RosMessageName;

        // ## Creates a message to store 4 booleans to provide feedback from the gripper
        // ## 2 bools for the state of the vacuum
        public bool vacuum0;
        public bool vacuum1;
        // ## 2 more bools for the feedback about the gripper
        //  00 = No grip
        //  10 = Bad grip
        //  11 = Good grip
        //  01 = No grip? (invalid
        public bool grip0;
        public bool grip1;

        public GripperStateMsg()
        {
            this.vacuum0 = false;
            this.vacuum1 = false;
            this.grip0 = false;
            this.grip1 = false;
        }

        public GripperStateMsg(bool vacuum0, bool vacuum1, bool grip0, bool grip1)
        {
            this.vacuum0 = vacuum0;
            this.vacuum1 = vacuum1;
            this.grip0 = grip0;
            this.grip1 = grip1;
        }

        public static GripperStateMsg Deserialize(MessageDeserializer deserializer) => new GripperStateMsg(deserializer);

        private GripperStateMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.vacuum0);
            deserializer.Read(out this.vacuum1);
            deserializer.Read(out this.grip0);
            deserializer.Read(out this.grip1);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.vacuum0);
            serializer.Write(this.vacuum1);
            serializer.Write(this.grip0);
            serializer.Write(this.grip1);
        }

        public override string ToString()
        {
            return "GripperStateMsg: " +
            "\nvacuum0: " + vacuum0.ToString() +
            "\nvacuum1: " + vacuum1.ToString() +
            "\ngrip0: " + grip0.ToString() +
            "\ngrip1: " + grip1.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
